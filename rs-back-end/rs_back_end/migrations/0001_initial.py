# Generated by Django 2.1 on 2019-01-26 11:35

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
  initial = True

  dependencies = [migrations.swappable_dependency(settings.AUTH_USER_MODEL)]

  operations = [
    migrations.CreateModel(
      name="Codex",
      fields=[
        (
          "id",
          models.AutoField(
            auto_created=True,
            primary_key=True,
            serialize=False,
            verbose_name="ID",
          ),
        ),
        (
          "title",
          models.CharField(
            help_text="Title of the codex",
            max_length=50,
            verbose_name="title",
          ),
        ),
        (
          "slug",
          models.SlugField(
            help_text="Slug created from the title",
            unique=True,
            verbose_name="title slug",
          ),
        ),
        (
          "description",
          models.TextField(
            blank=True,
            help_text="Description of the codex",
            max_length=500,
            verbose_name="description",
          ),
        ),
        (
          "creation_date",
          models.DateTimeField(
            editable=False,
            help_text="Date of creation of the codex",
            verbose_name="creation date",
          ),
        ),
        (
          "update_date",
          models.DateTimeField(
            editable=False,
            help_text="Date of last modification one of the codex information",
            verbose_name="update date",
          ),
        ),
        (
          "nested_update_date",
          models.DateTimeField(
            editable=False,
            help_text="Date of last modification one of the codex element",
            verbose_name="nested update date",
          ),
        ),
        (
          "author",
          models.ForeignKey(
            editable=False,
            help_text="Creator of the codex",
            null=True,
            on_delete=django.db.models.deletion.SET_NULL,
            related_name="codex",
            to=settings.AUTH_USER_MODEL,
          ),
        ),
      ],
      options={"verbose_name": "codex", "verbose_name_plural": "codex"},
    ),
    migrations.CreateModel(
      name="Information",
      fields=[
        (
          "id",
          models.AutoField(
            auto_created=True,
            primary_key=True,
            serialize=False,
            verbose_name="ID",
          ),
        ),
        (
          "text",
          models.TextField(help_text="Information text", verbose_name="text"),
        ),
        (
          "creation_date",
          models.DateTimeField(
            editable=False,
            help_text="Date of creation of the information",
            verbose_name="creation date",
          ),
        ),
        (
          "update_date",
          models.DateTimeField(
            editable=False,
            help_text="Date of last modification of the information text",
            verbose_name="update date",
          ),
        ),
        (
          "codex",
          models.OneToOneField(
            help_text="Codex of the information",
            on_delete=django.db.models.deletion.CASCADE,
            related_name="information",
            to="rs_back_end.Codex",
          ),
        ),
      ],
    ),
    migrations.CreateModel(
      name="Note",
      fields=[
        (
          "id",
          models.AutoField(
            auto_created=True,
            primary_key=True,
            serialize=False,
            verbose_name="ID",
          ),
        ),
        ("text", models.TextField(help_text="Note text", verbose_name="text")),
        (
          "creation_date",
          models.DateTimeField(
            editable=False,
            help_text="Date of creation of the note",
            verbose_name="creation date",
          ),
        ),
        (
          "update_date",
          models.DateTimeField(
            editable=False,
            help_text="Date of last modification of the note text",
            verbose_name="update date",
          ),
        ),
      ],
    ),
    migrations.CreateModel(
      name="Page",
      fields=[
        (
          "id",
          models.AutoField(
            auto_created=True,
            primary_key=True,
            serialize=False,
            verbose_name="ID",
          ),
        ),
        (
          "date",
          models.DateField(
            editable=False,
            help_text="Date of the page",
            verbose_name="date",
          ),
        ),
        (
          "creation_date",
          models.DateTimeField(
            editable=False,
            help_text="Date of creation of the page",
            verbose_name="creation date",
          ),
        ),
        (
          "nested_update_date",
          models.DateTimeField(
            editable=False,
            help_text="Date of last modification of an element of the page",
            verbose_name="update date",
          ),
        ),
        (
          "codex",
          models.ForeignKey(
            help_text="Codex of the page",
            on_delete=django.db.models.deletion.CASCADE,
            related_name="pages",
            to="rs_back_end.Codex",
            unique_for_date="date",
          ),
        ),
      ],
      options={"verbose_name": "page", "verbose_name_plural": "pages"},
    ),
    migrations.CreateModel(
      name="Task",
      fields=[
        (
          "id",
          models.AutoField(
            auto_created=True,
            primary_key=True,
            serialize=False,
            verbose_name="ID",
          ),
        ),
        ("text", models.TextField(help_text="Task text", verbose_name="text")),
        (
          "is_achieved",
          models.BooleanField(
            default=False,
            help_text="Task is achieved",
            verbose_name="achieved",
          ),
        ),
        (
          "creation_date",
          models.DateTimeField(
            editable=False,
            help_text="Date of creation of the task",
            verbose_name="creation date",
          ),
        ),
        (
          "update_date",
          models.DateTimeField(
            editable=False,
            help_text="Date of last modification of the task text or achievement status",
            verbose_name="update date",
          ),
        ),
        (
          "achieved_date",
          models.DateTimeField(
            editable=False,
            help_text="Date of achievement of the task",
            null=True,
            verbose_name="achieved date",
          ),
        ),
        (
          "page",
          models.ForeignKey(
            help_text="Tasks of the page",
            on_delete=django.db.models.deletion.CASCADE,
            related_name="tasks",
            to="rs_back_end.Page",
          ),
        ),
      ],
    ),
    migrations.AddField(
      model_name="note",
      name="page",
      field=models.OneToOneField(
        help_text="Note of the page",
        on_delete=django.db.models.deletion.CASCADE,
        related_name="note",
        to="rs_back_end.Page",
      ),
    ),
    migrations.AlterUniqueTogether(
      name="page", unique_together={("codex", "date")}
    ),
  ]
